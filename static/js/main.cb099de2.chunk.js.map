{"version":3,"sources":["images/katzen-lahore.jpg","images/android-chrome-192x192.png","components/PersonalImage.jsx","components/RepeatedImage.jsx","components/ExpandOnClick.jsx","posts/Day_10_17_finalize.jsx","components/Emoji.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PersonalImage","_ref","src","alt","react_default","a","createElement","className","RepeatedImage","imgSrc","paragraphs","Fragment","map","Paragraph","idx","key","ExpandOnClick","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","setState","isExpanded","state","inherits","createClass","value","_this$props","props","Clickable","Expandable","onClick","style","textDecoration","marginBottom","React","Component","Day_10_17","katze","ExpandOnClick_ExpandOnClick","Emoji","which","label","role","aria-label","Header","onBackClick","onHomeClick","display","flex","headerImage","height","getComponentForDay","_ref2","dayOfMonth","month","postName","concat","toString","padStart","TodaysPost","posts","marginTop","Content","_ref3","margin","locations","name","timeZone","Footer","updateTime","currentTime","getCurrentTime","DateTime","local","setZone","currentLocation","toFormat","setInterval","durationFormatted","christmas","fromISO","remainingDuration","Interval","fromDateTimes","toDuration","console","log","invalid","toObject","days","durationRemaining","textAlign","App","_Component","_this2","handleBackClick","_this2$state","day","oneDayBack","set","minus","handleHomeClick","todayForHer","date","urlParam","URLSearchParams","window","location","search","slice","get","fromJSDate","Date","_this$state","App_Footer","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb099de2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/katzen-lahore.94b2a8c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/android-chrome-192x192.3cff30c4.png\";","import React from \"react\";\n\nexport function PersonalImage({ src, alt }) {\n  return <img src={src} alt={alt} className={\"image round-corners\"} />;\n}\n","import React from \"react\";\n\nimport { PersonalImage } from \"./PersonalImage\";\n\nexport function RepeatedImage({ imgSrc, paragraphs }) {\n  return (\n    <>\n      {paragraphs.map((Paragraph, idx) => (\n        <div key={idx}>\n          <PersonalImage src={imgSrc} />\n          <Paragraph />\n        </div>\n      ))}\n    </>\n  );\n}\n","import React from \"react\";\n\nexport class ExpandOnClick extends React.Component {\n  constructor() {\n    super();\n    this.state = { isExpanded: false };\n  }\n\n  handleClick = () => {\n    this.setState({ isExpanded: !this.state.isExpanded });\n  };\n\n  render() {\n    let { isExpanded } = this.state;\n    let { Clickable, Expandable } = this.props;\n\n    // todo make node type dynamic\n    /*\n           if only a string, wrap in a span with handler\n           else do React.cloneElement(Clickable, {onClick:this.handleClick})\n         */\n    return (\n      <>\n        <span\n          onClick={this.handleClick}\n          style={{ textDecoration: \"underline\" }}\n        >\n          {<Clickable />}\n        </span>\n        {isExpanded ? <Expandable /> : <div style={{ marginBottom: \"3em\" }} />}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { RepeatedImage } from \"../components/RepeatedImage\";\n\nimport katze from \"../images/katzen-lahore.jpg\";\nimport { ExpandOnClick } from \"../components/ExpandOnClick\";\n\nexport function Day_10_17() {\n  return (\n    <>\n      <h1>Component Show Room</h1>\n      <h3>No. 1</h3> the <code>RepeatedImage</code> component.\n      <RepeatedImage\n        imgSrc={katze}\n        paragraphs={[\n          () => (\n            <>\n              <p>Kitties are süß, no matter where they are</p>\n            </>\n          ),\n          () => (\n            <>\n              <p>\n                Also there are other details on this image that you wanna\n                discuss in a separate paragraph without the reader to scroll up\n                the page to see the image you're referring to every time\n              </p>\n            </>\n          ),\n          () => (\n            <>\n              <p>Every new paragraph automatically starts with the image</p>\n            </>\n          )\n        ]}\n      />\n      <h3>No. 2</h3> is <code>ExpandOnClick</code> component.\n      <ExpandOnClick\n        Clickable={() => <p>click this text to un-hide more content.</p>}\n        Expandable={() => (\n          <>\n            <p>create a nice little interaction to make reading</p>\n            <ExpandOnClick\n              Clickable={() => <p>more fun ..</p>}\n              Expandable={() => <p> & exciting!</p>}\n            />\n          </>\n        )}\n      />\n    </>\n  );\n}\n","import React from \"react\";\n\nexport function Emoji({ which, label }) {\n  return (\n    <span role={\"img\"} aria-label={label}>\n      {which}\n    </span>\n  );\n}\n","import React, { Component } from \"react\";\nimport { DateTime, Interval } from \"luxon\";\n\nimport \"./App.css\";\nimport * as posts from \"./posts\";\nimport headerImage from \"./images/android-chrome-192x192.png\";\nimport { Emoji } from \"./components/Emoji\";\n\nfunction Header({ onBackClick, onHomeClick }) {\n  return (\n    <div className={\"header\"} style={{ display: \"flex\" }}>\n      <div onClick={() => onBackClick()} style={{ flex: \"1 0 44px\" }}>\n        {\"<\"}\n      </div>\n      <div onClick={() => onHomeClick()} style={{ flex: \"1 0 auto\" }}>\n        <img src={headerImage} style={{ height: \"1.5em\" }} alt={\"Ein Lynx\"} />{\" \"}\n        <span>MaahdH</span>\n      </div>\n      <div style={{ flex: \"1 0 44px\" }} />\n    </div>\n  );\n}\n\nconst getComponentForDay = ({ dayOfMonth, month }) => {\n  let postName = `Day_${month\n    .toString()\n    .padStart(2, \"0\")}_${dayOfMonth.toString().padStart(2, \"0\")}`;\n  let TodaysPost = posts[postName];\n  if (TodaysPost) {\n    return <TodaysPost />;\n  } else {\n    return (\n      <>\n        <div>\n          Trying to get post for {month}-{dayOfMonth} ({postName})\n        </div>\n        <div style={{ marginTop: \"1em\" }}>\n          append{\" \"}\n          <span style={{ textDecoration: \"underline\" }}>?day=10/17/2019</span>{\" \"}\n          to your url and you'll get to the showroom\n        </div>\n      </>\n    );\n  }\n};\n\n/*\n * `?date=02/20/2019` will output content for February 20th\n * `/` is important as the most accepted seperator\n */\nfunction Content({ dayOfMonth, month }) {\n  return (\n    <div className={\"content\"}>\n      <div style={{ margin: \"1em\" }}>\n        {getComponentForDay({ dayOfMonth, month })}\n      </div>\n    </div>\n  );\n}\n\nfunction durationRemaining() {\n  const christmas = DateTime.fromISO(\"2042-12-24T12:05:00+01:00\");\n  const remainingDuration = Interval.fromDateTimes(\n    DateTime.local(),\n    christmas\n  ).toDuration([\"days\", \"hours\"]);\n  console.log({ remainingDuration });\n  let durationFormatted;\n  if (remainingDuration.invalid) {\n    durationFormatted = (\n      <>\n        <Emoji which={\"🎉\"} label={\"party\"} /> 0h\n      </>\n    );\n  } else if (remainingDuration.toObject().days >= 1) {\n    durationFormatted = remainingDuration.toFormat(\"dd't 'hh'h'\");\n  } else {\n    durationFormatted = (\n      <>\n        <Emoji which={\"🎉\"} label={\"party\"} />{\" \"}\n        {remainingDuration.toFormat(\"hh'h'\")}\n      </>\n    );\n  }\n  return durationFormatted;\n}\n\nconst locations = [\n  {\n    name: \"Washington D.C.\",\n    timeZone: \"utc-5\"\n  },\n  {\n    name: \"Philadelphia\",\n    timeZone: \"utc-5\",\n    state: \"Pennsylvania\"\n  },\n  {\n    name: \"New York\",\n    timeZone: \"utc-5\"\n  },\n  {\n    name: \"Henderson\",\n    timeZone: \"utc-8\",\n    state: \"Nevada\"\n  },\n  {\n    name: \"Chicago\",\n    timeZone: \"utc-6\",\n    state: \"Illinois\"\n  },\n  {\n    name: \"Zuhause\",\n    timeZone: \"utc+1\",\n    state: \"Sachsen-Anhalt\"\n  }\n];\n\nexport class Footer extends React.Component {\n  constructor() {\n    super();\n    this.currentLocation = locations[5];\n    this.state = { currentTime: this.getCurrentTime() };\n    setInterval(this.updateTime, 5000);\n  }\n\n  updateTime = () => {\n    this.setState({\n      currentTime: this.getCurrentTime()\n    });\n  };\n\n  getCurrentTime = () => {\n    return DateTime.local()\n      .setZone(this.currentLocation.timeZone)\n      .toFormat(\"HH':'mm\");\n  };\n\n  render() {\n    let durationFormatted = durationRemaining();\n    let { currentTime } = this.state;\n\n    return (\n      <div className={\"footer\"}>\n        <div style={{ flex: \"1 1 auto\", textAlign: \"center\" }}>\n          {durationFormatted}\n        </div>\n        <div style={{ flex: \"1 1 auto\", textAlign: \"center\" }}>\n          {this.currentLocation.name}{\" \"}\n          {this.currentLocation.state ? (\n            <div>\n              <small>{this.currentLocation.state}</small>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div style={{ flex: \"1 1 auto\", textAlign: \"center\" }}>\n          {currentTime}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let urlParam = new URLSearchParams(window.location.search.slice(1)).get(\n      \"date\"\n    );\n    let date;\n    if (urlParam) {\n      date = DateTime.fromJSDate(new Date(urlParam));\n    } else {\n      date = DateTime.local().setZone(\"utc+1\");\n    }\n    this.state = { day: date.day, month: date.month };\n  }\n\n  handleBackClick = () => {\n    let { day, month } = this.state;\n    let oneDayBack = DateTime.local()\n      .setZone(\"utc+1\")\n      .set({ day, month })\n      .minus({ days: 1 });\n    this.setState({ day: oneDayBack.day, month: oneDayBack.month });\n  };\n\n  handleHomeClick = () => {\n    const todayForHer = DateTime.local().setZone(\"utc+1\");\n    this.setState({ day: todayForHer.day, month: todayForHer.month });\n  };\n\n  render() {\n    const { day, month } = this.state;\n    return (\n      <div className={\"app\"}>\n        <Header\n          onBackClick={this.handleBackClick}\n          onHomeClick={this.handleHomeClick}\n        />\n        <Content dayOfMonth={'17'} month={'10'} />\n        <Footer />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}